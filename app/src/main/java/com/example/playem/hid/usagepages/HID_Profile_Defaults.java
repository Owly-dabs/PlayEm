package com.example.playem.hid.usagepages;

public class HID_Profile_Defaults {
    public final byte[] Profile = {
            0x05, 0x01,                 // Usage Page (Generic Desktop Ctrls)
            0x09, 0x04,                 // Usage (Joystick)
            (byte) 0xA1, 0x01,          // Collection (Application)
            (byte) 0xA1, 0x02,          //   Collection (Logical)
            (byte) 0x85, 0x01,          //     Report ID (1)
            0x75, 0x08,                 //     Report Size (8)
            (byte) 0x95, 0x01,          //     Report Count (1)
            0x15, 0x00,                 //     Logical Minimum (0)
            0x26, (byte)0xFF, 0x00,     //     Logical Maximum (255)
            (byte)0x81, 0x03,           //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
            0x75, 0x01,                 //     Report Size (1)
            (byte)0x95, 0x13,           //     Report Count (19)
            0x15, 0x00,                 //     Logical Minimum (0)
            0x25, 0x01,                 //     Logical Maximum (1)
            0x35, 0x00,                 //     Physical Minimum (0)
            0x45, 0x01,                 //     Physical Maximum (1)
            0x05, 0x09,                 //     Usage Page (Button)
            0x19, 0x01,                 //     Usage Minimum (0x01)
            0x29, 0x13,                 //     Usage Maximum (0x13)
            (byte)0x81, 0x02,           //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
            0x75, 0x01,                 //     Report Size (1)
            (byte)0x95, 0x0D,           //     Report Count (13)
            0x06, 0x00, (byte)0xFF,     //     Usage Page (Vendor Defined 0xFF00)
            (byte)0x81, 0x03,           //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
            0x15, 0x00,                 //     Logical Minimum (0)
            0x26, (byte)0xFF, 0x00,     //     Logical Maximum (255)
            0x05, 0x01,                 //     Usage Page (Generic Desktop Ctrls)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0xA1, 0x00,           //     Collection (Physical)
            0x75, 0x08,                 //       Report Size (8)
            (byte)0x95, 0x04,           //       Report Count (4)
            0x35, 0x00,                 //       Physical Minimum (0)
            0x46, (byte)0xFF, 0x00,     //       Physical Maximum (255)
            0x09, 0x30,                 //       Usage (X)
            0x09, 0x31,                 //       Usage (Y)
            0x09, 0x32,                 //       Usage (Z)
            0x09, 0x35,                 //       Usage (Rz)
            (byte)0x81, 0x02,           //       Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
            (byte)0xC0,                 //     End Collection
            0x05, 0x01,                 //     Usage Page (Generic Desktop Ctrls)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x27,           //     Report Count (39)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0x81, 0x02,           //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x30,           //     Report Count (48)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0x91, 0x02,           //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x30,           //     Report Count (48)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0xB1, 0x02,           //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
            (byte)0xC0,                 //   End Collection
            (byte)0xA1, 0x02,           //   Collection (Logical)
            (byte)0x85, 0x02,           //     Report ID (2)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x30,           //     Report Count (48)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0xB1, 0x02,           //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
            (byte)0xC0,                 //   End Collection
            (byte)0xA1, 0x02,           //   Collection (Logical)
            (byte)0x85, (byte)0xEE,     //     Report ID (-18)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x30,           //     Report Count (48)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0xB1, 0x02,           //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
            (byte)0xC0,                 //   End Collection
            (byte)0xA1, 0x02,           //   Collection (Logical)
            (byte)0x85, (byte)0xEF,     //     Report ID (-17)
            0x75, 0x08,                 //     Report Size (8)
            (byte)0x95, 0x30,           //     Report Count (48)
            0x09, 0x01,                 //     Usage (Pointer)
            (byte)0xB1, 0x02,           //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
            (byte)0xC0,                 //   End Collection
            (byte)0xC0,                 // End Collection
    };
}
